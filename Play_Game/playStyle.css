* {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}
html {
  box-sizing: border-box;
}
body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  display: flex;
  overflow: hidden;
}

.background {
  position: fixed;
  height: 100%;
  width: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-image: url(/Images/playBackground.png);
  filter: blur(2px);
  z-index: 0;
}

.layout {
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: black;
  z-index: 9999;
}

.front {
  position: fixed;
  height: 100%;
  width: 100%;
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr 0.3fr 1fr;
  z-index: 1;
  box-sizing: border-box;
}

.opponentFleet {
  position: relative;
  display: flex;
  flex-direction: column;
}

.statusTitle {
  width: 100%;
  height: 75px;
  display: flex; /* Enable flexbox */
  flex-direction: column; /* Arrange items in a column */
  align-items: center;
  justify-content: flex-end; /* Pushes the image to the top, bottom element to the bottom */
}
.statusTitle img {
  max-width: 100%;
  object-fit: cover;
}

.opponentFleetContainer {
  display: grid;
  height: 100%;
  grid-template-rows: 1fr 1fr 1fr;
  grid-template-columns: repeat(2, 1fr);
  gap: 15px;
  border: 10px solid transparent;
  box-shadow: 0 4px 50px rgba(0, 0, 0, 0.8);
  border-radius: 10px;
}

.opponentFleetCell,
.opponentFleetStatus {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  align-items: center;
  flex-direction: column;
}
.opponentFleetCell > img {
  position: absolute;
  top: 0%;
  left: 50%;
  transform: translate(-50%, 0%);
}

.player,
.opponent {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  align-items: center;
  justify-content: center;
}

.player div,
.opponent div {
  position: relative;
}

.quitGameContainer {
  position: fixed !important;
  top: 0px;
  left: 0px;
}

.playerTitle,
.opponentTitle {
  width: 100%;
  height: 10%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.playerTitle img,
.opponentTitle img {
  height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.panel {
  width: 550px;
  height: 550px;
  border: 5px double black;
  display: grid;
  grid-template-columns: repeat(15, 1fr);
  grid-template-rows: repeat(15, 1fr);
  overflow: hidden;
  z-index: 3;
  transition: all 1s;
}
.panel > div {
  border: 1px solid rgb(41, 40, 40); /* Border for grid items */
}
.panel > img {
  position: absolute;
  z-index: 1000;
}

.target {
  background-color: rgb(40, 2, 2);
}

.horizontalTargetLine {
  width: 100%;
  height: 1%;
}
.verticalTargetLine {
  width: 1%;
  height: 100%;
}

.fade-in {
  animation: fadeIn 1s forwards;
}

.fade-out {
  animation: fadeOut 1s forwards;
}

.missed {
  background-image: url(/Images/X.png);
  pointer-events: none;
}
.hited {
  background-image: url(/Images/bombed.gif);
  pointer-events: none;
}
.flame {
  background-image: url(/Images/flame.gif);
  pointer-events: none;
}
.explosion {
  background-image: url(/Images/explosion.gif);
  pointer-events: none;
}
.destroyed {
  background-image: url(/Images/fractions.png);
  pointer-events: none;
}

.deactive {
  pointer-events: none;
  opacity: 0.5;
}

.drag-over {
  background-color: rgb(139, 177, 179);
}

.overlay,
.spinner-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #06060638;
  backdrop-filter: blur(2px);
  z-index: 3000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.winnerDialog {
  position: absolute;
  margin: auto;
  width: 600px;
  height: 400px;
  padding: 2rem;
  background: rgba(
    255,
    255,
    255,
    0.15
  ); /* Semi-transparent background for glass effect */
  border-radius: 40px;
  border: 3px solid rgba(190, 239, 255, 0.3); /* Subtle border to enhance glassmorphism */
  backdrop-filter: blur(20px);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.5); /* Shadow for depth */
  align-items: center;
  justify-content: center;
  z-index: 4000;
  animation: slideDown 1s ease forwards;
}

.winnerDialog > img {
  width: 100%;
  height: 30%;
  margin-bottom: 5%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.closeButton {
  position: absolute;
  background: none;
  top: 10%;
  left: 90%;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  cursor: pointer;
  border: 4px solid rgba(0, 0, 0, 0.6); /* Soft white border for better definition */
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.7), 0 0 40px rgba(23, 24, 24, 0.5); /* Glow and shadow for a 3D effect */
  transition: all 0.1s;
}
.closeButton:hover {
  transform: scale(1.1);
  box-shadow: 0 0 30px rgba(255, 255, 255, 0.8), 0 0 60px rgba(5, 5, 5, 0.6);
}

.displaySetting {
  display: flex;
  flex-direction: column;
}

.newGame,
.quitGame,
.playAgain {
  height: 60px;
  width: 200px;
  background-image: linear-gradient(to top left, #3b34bf, #9195ed);
  border: 0;
  border-radius: 56px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: 'Poppins', 'Inter', 'Nunito', -apple-system, system-ui,
    'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', sans-serif;
  font-size: 16px;
  font-weight: 600;
  outline: 0;
  margin-top: 5px;
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: all 0.3s;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;

  border: 4px solid rgba(255, 255, 255, 0.6); /* Soft white border for better definition */
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.7), 0 0 40px rgba(0, 150, 255, 0.5); /* Glow and shadow for a 3D effect */
}

.quitGame {
  width: 60px;
  height: 40px;
  background-image: linear-gradient(to top left, #ff0000, #ed9191);
  border-radius: 5px;
  border: 2px solid rgba(255, 255, 255, 0.6); /* Soft white border for better definition */
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.7), 0 0 40px rgba(255, 0, 0, 0.5); /* Glow and shadow for a 3D effect */
}

.quitGame img {
  width: 100%; /* Make the image take up the full width of the button */
  max-width: 80%; /* Set the maximum width of the image (adjust as needed) */
  max-height: 80%;
  height: auto; /* Make the image take up the full height of the button */
  border-radius: inherit; /* Make sure the image corners match the button's rounded corners */

  object-fit: contain;
}

.newGame:hover,
.quitGameBtn:hover,
.playAgain:hover {
  transform: scale(1.1);
  box-shadow: 0 0 30px rgba(255, 255, 255, 0.8), 0 0 60px rgba(0, 150, 255, 0.6);
}

.loading-content {
  margin: auto;
  background: white;
  padding: 20px 30px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-top-color: #3498db; /* Blue spinner */
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 10px auto;
}

.buttonsContainer {
  display: flex;
  padding: 10px; /* Add spacing inside the container */
  gap: 50px; /* Use gap for spacing between children */
}

/* Spinner keyframes */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes slideDown {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.hidden {
  display: none;
}
